name: CI (JDK17 / Spring Boot 3.5.5)

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BOOT_VERSION: "3.5.5"
  IMAGE_NAME: "auth-service"

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      SPRING_PROFILES_ACTIVE: test   # 단일 테스트 프로필 사용

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- JDK 17 + Gradle 캐시 ---
      - name: Set up JDK 17 (Gradle)
        if: ${{ hashFiles('**/build.gradle','**/build.gradle.kts') != '' }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      # --- JDK 17 + Maven 캐시 ---
      - name: Set up JDK 17 (Maven)
        if: ${{ hashFiles('**/pom.xml') != '' && hashFiles('**/build.gradle','**/build.gradle.kts') == '' }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      # --- Spring Boot 3.5.5 일관성 확인(원하면 유지, 아니면 이 스텝 제거) ---
      - name: Enforce Spring Boot ${{ env.BOOT_VERSION }}
        shell: bash
        run: |
          FAILS=()
          for f in $(git ls-files '**/build.gradle' '**/build.gradle.kts' '**/settings.gradle' '**/settings.gradle.kts'); do
            if grep -q "org.springframework.boot" "$f"; then
              grep -Eq "3\.5\.5" "$f" || FAILS+=("$f")
            fi
          done
          for p in $(git ls-files '**/pom.xml'); do
            if grep -q "spring-boot" "$p"; then
              grep -q "3.5.5" "$p" || FAILS+=("$p")
            fi
          done
          if [ ${#FAILS[@]} -gt 0 ]; then
            echo "❌ Spring Boot ${BOOT_VERSION}가 아닌 파일:"
            printf ' - %s\n' "${FAILS[@]}"
            exit 1
          fi

      # --- Gradle 빌드/테스트 ---
      - name: Build & Test (Gradle)
        if: ${{ hashFiles('**/build.gradle','**/build.gradle.kts') != '' }}
        run: |
          chmod +x ./gradlew || true
          ./gradlew clean build --no-daemon --stacktrace

      # --- Maven 빌드/테스트 ---
      - name: Build & Test (Maven)
        if: ${{ hashFiles('**/pom.xml') != '' && hashFiles('**/build.gradle','**/build.gradle.kts') == '' }}
        run: mvn -B -ntp --no-transfer-progress clean verify

      # --- Docker (옵션: Dockerfile 있을 때만) ---
      - name: Set up Docker Buildx
        if: ${{ hashFiles('**/Dockerfile') != '' }}
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: ${{ hashFiles('**/Dockerfile') != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.dockerhub_username }}   # <- 네가 만든 소문자 시크릿명
          password: ${{ secrets.dockerhub_token }}

      - name: Build & Push image (develop)
        if: ${{ hashFiles('**/Dockerfile') != '' && github.ref == 'refs/heads/develop' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ secrets.dockerhub_username }}/${{ env.IMAGE_NAME }}:develop
            docker.io/${{ secrets.dockerhub_username }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Build & Push image (main)
        if: ${{ hashFiles('**/Dockerfile') != '' && github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ secrets.dockerhub_username }}/${{ env.IMAGE_NAME }}:latest
            docker.io/${{ secrets.dockerhub_username }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # 인프라 레포 업데이트
      - name: Update Infrastructure Repository
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          # 인프라 레포 클론
          git clone https://github.com/KE-WhyNot/INFRA.git
          cd youthfi-infrastructure
          
          # 이미지 태그 업데이트
          sed -i "s|image: auth-service:.*|image: docker.io/${{ secrets.dockerhub_username }}/be-auth-service:${{ github.sha }}|g" k8s/auth-service/auth-service.yaml
          
          # 변경사항 커밋 및 푸시
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add k8s/auth-service/auth-service.yaml
          git commit -m "Update auth-service image to ${{ github.sha }}"
          git push

      # --- 산출물/리포트 업로드 ---
      - name: Upload JARs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-jars
          path: |
            **/build/libs/*.jar
            **/target/*.jar
          if-no-files-found: ignore

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/test-results/test/**
            **/build/reports/tests/**
            **/target/surefire-reports/**
            **/target/failsafe-reports/**
            **/jacoco/**
          if-no-files-found: ignore
